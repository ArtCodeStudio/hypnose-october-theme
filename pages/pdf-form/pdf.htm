title = "PDF Formular"
url = "/pdf-form/pdf"
layout = "pdf-form"
is_hidden = 0
contentType = "html"
force_show = 0
==
<?php
use Cms\Classes\MediaViewHelper;
use Cms\Classes\CmsException;

function onStart() {
    
    /**
     * Set the global twig variables so that this page also works over a normal call
     */
    $values = post();
    $this['data'] = $values;
    $this['pdf_forms'] = $this->theme->pdf_forms;
}

function onEnd() {
    $value = post();
    
    /**
     * Get loader and twig from controller
     * @see https://github.com/octobercms/october/blob/master/modules/cms/classes/Controller.php
     */
    $twig = $this->controller->getTwig();
    $loader = $this->controller->getLoader();
    
    /**
     * Twig variables
     * Global twig variables as october would pass this to twig.
     * And additional variables like the post data and the questionairies
     * @see https://github.com/octobercms/october/blob/master/modules/cms/classes/Controller.php#L307
     */
    $renderVars = ['this' => $this, 'data' => $value, 'pdf_forms' => $this->theme->pdf_forms];
    
    /**
     * Render the page
     * @see https://github.com/octobercms/october/blob/master/modules/cms/classes/Controller.php#L417
     */
    CmsException::mask($this->page, 400);
    $loader->setObject($this->page);
    $template = $twig->loadTemplate($this->page->getFilePath());
    $pageContents = $template->render($renderVars);
    CmsException::unmask(); 
    

    /**
     * Render the layout
     * @see https://github.com/octobercms/october/blob/master/modules/cms/classes/Controller.php#L427
     */
    CmsException::mask($this->layout, 400);
    $loader->setObject($this->layout);
    $template = $twig->loadTemplate($this->layout->getFilePath());
    $result = $template->render($renderVars);
    CmsException::unmask();
    
     
    /**
     * WORKAROUND
     * Normally october takes care of rendering the page with the layout, but I haven't figured out how to do this using the php code.
     *
     * Append the rendered page to the body of the rendered layout
     */
    $renderedLayout = $twig->render($template, $renderVars);
    $bodyPos = strpos($renderedLayout, "</body>");
    $pageHtml = substr_replace($renderedLayout, $pageContents, $bodyPos - 1, 0);


    $header = $this->controller->renderPartial("pdf-form/header.htm", ['this' => $this, 'data' => $value, 'pdf_forms' => $this->theme->pdf_forms, 'choosenForm'=> "Hypnose"]);
    $footer = $this->controller->renderPartial("pdf-form/footer.htm", ['this' => $this, 'data' => $value, 'pdf_forms' => $this->theme->pdf_forms, 'choosenForm'=> "Hypnose"]);
    

    /**
     * Generate the pdf
     */
    $pdf = SnappyPDF::loadHTML($pageHtml)
    ->setOption('margin-left', 0)
    ->setOption('margin-right', 0)
    ->setOption('header-html', $header)
    ->setOption('footer-html', $footer)
    ->setPaper('a4');
    
    /**
     * Return the generated pdf as the page response
     */
    return Response::make($pdf->output(), 200, [
      'Content-Type'        => 'application/pdf',
      'Content-Disposition' => 'inline; filename="test.pdf"',
    ]);

}
?>
==
{% partial 'pdf-form/pdf' %}